"""
Django settings for config project.

Generated by 'django-admin startproject' using Django 4.2.23.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path
import os
from dotenv import load_dotenv

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

ENV = os.environ.get("DJANGO_ENV", "development")

if ENV == "production":
    dotenv_path = BASE_DIR / ".env.production"
else:
    dotenv_path = BASE_DIR / ".env.development"

load_dotenv(dotenv_path=dotenv_path)

# 문자열 리스트로 변환
def parse_env_list(varname):
    value=os.getenv(varname)
    if value:
        return [v.strip() for v in value.split(',')]
    return []


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
# SECRET_KEY = 'django-insecure-d(arnxp*c+3zhdig8eioo@0z%5r=i-583tq2r_s!se)t75*pep'
SECRET_KEY = os.environ.get("DJANGO_SECRET_KEY")

if not SECRET_KEY:
    raise ValueError("❌ 환경변수 DJANGO_SECRET_KEY가 설정되지 않았습니다!")


# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ["*"] # 모든 url 허용, "http://localhost:3000/" 넣어주어야 함?


# Application definition

INSTALLED_APPS = [
    "corsheaders",
    "rest_framework",
    "app",
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
]

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',  # 가장 위에 두는 게 중요
    'django.middleware.security.SecurityMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

# CORS_ALLOW_ALL_ORIGINS = True
CORS_ALLOWED_ORIGINS = parse_env_list("CORS_ALLOWED_ORIGINS")
CSRF_TRUSTED_ORIGINS = parse_env_list("CSRF_TRUSTED_ORIGINS")

ROOT_URLCONF = 'config.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'config.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': BASE_DIR / 'db.sqlite3',
#     }
# }
# DATABASES = {
#    'default': {
#        'ENGINE': 'django.db.backends.postgresql',
#        'NAME': 'mydb',  # PostgreSQL 데이터베이스 이름
#        'USER': 'kogo',  # PostgreSQL 사용자 이름
#        'PASSWORD': '111',  # PostgreSQL 사용자 비밀번호
#        'HOST': 'localhost',  # PostgreSQL 서버 주소 (예: 로컬호스트)
#        'PORT': '5432',  # PostgreSQL 기본 포트
#    }
# }
DATABASES = {
   'default': {
       'ENGINE': 'django.db.backends.postgresql',
       'NAME': os.environ.get('POSTGRES_DB'),  # PostgreSQL 데이터베이스 이름
       'USER': os.environ.get('POSTGRES_USER'),  # PostgreSQL 사용자 이름
       'PASSWORD': os.environ.get('POSTGRES_PASSWORD'),  # PostgreSQL 사용자 비밀번호
       'HOST': os.environ.get('POSTGRES_HOST'),  # PostgreSQL 서버 주소 (예: 로컬호스트)
       'PORT': os.environ.get('POSTGRES_PORT'),  # PostgreSQL 기본 포트
   }
}
# DATABASES = {
#    'default': {
#        'ENGINE': 'django.db.backends.postgresql',
#        'NAME': os.environ.get('POSTGRES_DB'),  # PostgreSQL 데이터베이스 이름
#        'USER': os.environ.get('POSTGRES_USER'),  # PostgreSQL 사용자 이름
#        'PASSWORD': os.environ.get('POSTGRES_PASSWORD'),  # PostgreSQL 사용자 비밀번호
#        'HOST': 'db',  # PostgreSQL 서버 주소 (예: 로컬호스트)
#        'PORT': '5432',  # PostgreSQL 기본 포트
#    }
# }



# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

# LANGUAGE_CODE = 'en-us'
LANGUAGE_CODE = 'ko-kr'

# TIME_ZONE = 'UTC'
TIME_ZONE = 'Asia/Seoul'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = 'static/'

if ENV == "production":
    STATIC_ROOT = BASE_DIR / "staticfiles"

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
